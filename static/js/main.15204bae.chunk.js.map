{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","defaultProps","Alert","alert","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalise","msg","TextForm","useState","text","setText","style","color","heading","backgroundColor","rows","onChange","event","target","value","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","italics","length","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.15204bae.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Default Title'\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalise = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        \r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalise(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React ,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleClear = ()=> {\r\n        let newText = '';\r\n        setText(newText);\r\n    }\r\n    const handleUpper = ()=> {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Upper case\",\"success\");\r\n    }\r\n    const handleLow = ()=> {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lower case\",\"success\");\r\n    }\r\n    const handleItalics = ()=> {\r\n        let newText = text.italics();\r\n        setText(newText);\r\n    }\r\n    const handleOnChange = (event)=> {\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = ()=>{\r\n        var text = document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"text Coppied successfully\",\"success\");\r\n    }\r\n    const handleSpaces = ()=>{\r\n        var newText = text.split(/[  ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed successfully\",\"success\");\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    // setText(\"new Text\");\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" id=\"myBox\" style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}} rows=\"8\" onChange={handleOnChange} value= {text}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-danger mx-2\" onClick={handleClear}>Clear!</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpper}>UPPER!</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLow}>lower!</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy!</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleSpaces}>Spaces!</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleItalics}>Italics!</button>\r\n        </div>\r\n        <div className=\"container my-3\"  style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your text Summary</h2>\r\n            <p>{text.split(\" \").length} Words and {text.length} Characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n            <h3>Preview</h3>\r\n            <p>{text.length>0?text:\"Enter Something to preview it here\"}</p>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react'\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"MyApp - Dark Mode\"\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"lightk mode has been enabled\", \"success\");\n    }\n  }\n\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"MyApp\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter your Text to analyse below\" mode={mode} />\n          {/* </Route>\n        </Switch> */}\n        \n      </div>\n      {/* </Router> */}\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}